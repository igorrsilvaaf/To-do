const { app, BrowserWindow, dialog } = require('electron');const path = require('path');function createWindow() {    const win = new BrowserWindow({        width: 1400,        height: 900,        webPreferences: {            nodeIntegration: true,            contextIsolation: false        }    });    win.loadFile(path.join(__dirname, '../Index.html'));    // Monitorar evento de download    win.webContents.session.on('will-download', (event, item, webContents) => {        // Prevenir o download automático        event.preventDefault();                dialog.showSaveDialog({            title: 'Salvar arquivo',            defaultPath: path.join(app.getPath('downloads'), item.getFilename()), // Diretório padrão            buttonLabel: 'Salvar'        }).then(result => {            if (!result.canceled && result.filePath) {                // Se o usuário selecionar um local, definir o caminho e continuar                item.setSavePath(result.filePath);                                // Iniciar o download e monitorar progresso                item.on('updated', (event, state) => {                    if (state === 'progressing') {                        console.log(`Progresso: ${Math.round((item.getReceivedBytes() / item.getTotalBytes()) * 100)}%`);                    }                });                item.on('done', (event, state) => {                    if (state === 'completed') {                        console.log('Download concluído com sucesso:', result.filePath);                    } else {                        console.log('Download falhou:', state);                    }                });            } else {                // Se o usuário cancelar o diálogo, cancele o download                item.cancel();                console.log('Download cancelado.');            }        }).catch(err => {            console.log('Erro ao salvar arquivo: ', err);        });    });}app.whenReady().then(() => {    createWindow();    app.on('activate', () => {        if (BrowserWindow.getAllWindows().length === 0) {            createWindow();        }    });});app.on('window-all-closed', () => {    if (process.platform !== 'darwin') {        app.quit();    }});